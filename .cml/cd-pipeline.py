import os

def generate_report():
    """Generates a markdown report for the CML pipeline."""

    # Get environment variables from the GitHub Actions workflow
    project_id = os.environ.get('PROJECT_ID', 'N/A')
    image_tag = os.environ.get('IMAGE_TAG', 'N/A')
    external_ip = os.environ.get('EXTERNAL_IP', 'N/A')
    commit_sha = os.environ.get('GITHUB_SHA', 'N/A')
    repo_name = os.environ.get('GITHUB_REPOSITORY', 'N/A')
    
    # Construct the report content
    report_content = f"""
# Continuous Deployment Report for Iris API

## Deployment Status
- **Repository:** `{repo_name}`
- **Commit SHA:** `{commit_sha}`
- **Deployment Status:** âœ… Successfully deployed to GKE

## Deployed Artifact
- **Docker Image:** `{image_tag}`
- **Google Artifact Registry URL:** `https://us-central1-docker.pkg.dev/{project_id}/my-repo/{image_tag.split('/')[-1]}`

## Service Details
- **Kubernetes Service:** `iris-api-service`
- **External IP:** `{external_ip}`

## Testing the Deployed API
You can test the deployed API using `curl`:

**Health Check:**
curl http://{external_ip}/health

text

**Prediction Endpoint:**
curl -X POST "http://{external_ip}/predict/" \
-H "Content-Type: application/json" \
-d '{{"sepal_length": 5.1, "sepal_width": 3.5, "petal_length": 1.4, "petal_width": 0.2}}'

text

Generated by CML
"""
    with open('build-and-deploy.md', 'w') as f:
        f.write(report_content)
    
    print("CML report generated successfully!")

if __name__ == "__main__":
    generate_report()
